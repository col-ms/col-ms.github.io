I"Î<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">knitr</span><span class="o">::</span><span class="n">opts_chunk</span><span class="o">$</span><span class="n">set</span><span class="p">(</span><span class="n">fig.align</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"center"</span><span class="p">)</span><span class="w">
</span><span class="n">ggplot2</span><span class="o">::</span><span class="n">theme_set</span><span class="p">(</span><span class="n">ggplot2</span><span class="o">::</span><span class="n">theme_minimal</span><span class="p">())</span><span class="w">
</span></code></pre></div></div>

<h1 id="welcome">Welcome!</h1>

<p>Hello, and welcome to my very first Markdown publication. 
The vast majority of my time spent with R has been for university courses, so
I thought it would be a good change of pace to apply the skills I‚Äôve learned
to a personal project. I have learned a great deal from books like 
Hadley Wickham‚Äôs <a href="https://r4ds.had.co.nz/">R for Data Science</a>, as well as 
tutorials, articles, and markdown pages from sites such as 
<a href="https://rpubs.com/">RPubs</a>, <a href="https://www.r-bloggers.com/">R-bloggers</a>, 
and <a href="https://towardsdatascience.com/">Towards Data Science</a>. 
My hope is that this project can in turn be used to help someone else down 
the road, as others have helped me.</p>

<p>In this project, we will be exploring how to use Spotify‚Äôs API and 
the <strong>spotifyr</strong> package to access data about a particular artists discography. 
We‚Äôll also be utilizing the <strong>geniusr</strong> package to retrieve lyrics for 
songs, allowing for sentiment to be explored and visualized, and doing our best
to apply a clustering algorithm to the discography.</p>

<h1 id="spotify-api-credentials">Spotify API Credentials</h1>

<p>To begin, we will first need to head over to the 
<a href="https://developer.spotify.com/dashboard/">Spotify for Developers</a> page, 
where we will be registering an application to obtain an API key. Once you‚Äôve 
logged in, select ‚ÄúCreate an App‚Äù and fill out the required fields. Completing 
this will give you access to two important fields: your <strong>client id</strong> and 
your <strong>client secret</strong> (or API key). These fields will be used to let the
API know who is accessing it and that you have proper authentication. 
To get started, first install the <strong>spotifyr</strong> package if you don‚Äôt already
have it.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">install.packages</span><span class="p">(</span><span class="s2">"spotifyr"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Next, we can use the following code to pass out authentication credentials
to the API, giving us access.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Sys.setenv</span><span class="p">(</span><span class="n">SPOTIFY_CLIENT_ID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'your client id'</span><span class="p">)</span><span class="w">
</span><span class="n">Sys.setenv</span><span class="p">(</span><span class="n">SPOTIFY_CLIENT_SECRET</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'your client secret'</span><span class="p">)</span><span class="w">
</span><span class="n">access_token</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_spotify_access_token</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<h1 id="gathering-the-data">Gathering the Data</h1>

<p>Now that you are authenticated with the API, we can begin using the 
<strong>spotifyr</strong> package‚Äôs functions to retrieve information.
In this project, we will be analyzing Mac Miller‚Äôs discography and exploring 
how his sound changed throughout his career. To get information regarding 
a single artist‚Äôs discography, we can use the <code class="language-plaintext highlighter-rouge">get_artist_audio_features()</code> 
function. The function will return a dataframe containing information about all 
of the artists‚Äô music that is hosted on Spotify. The function takes many 
possible arguments, but for the sake of this project, we only need to pass in 
one: the name of the artist for which we wish to get information.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">spotifyr</span><span class="p">)</span><span class="w">
</span><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_artist_audio_features</span><span class="p">(</span><span class="n">artist</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Mac Miller"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>To check that this function performed as expected, let‚Äôs take a very quick
glance at the returned dataframe.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colnames</span><span class="p">(</span><span class="n">mm_data</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "artist_name"                  "artist_id"                   
##  [3] "album_id"                     "album_type"                  
##  [5] "album_images"                 "album_release_date"          
##  [7] "album_release_year"           "album_release_date_precision"
##  [9] "danceability"                 "energy"                      
## [11] "key"                          "loudness"                    
## [13] "mode"                         "speechiness"                 
## [15] "acousticness"                 "instrumentalness"            
## [17] "liveness"                     "valence"                     
## [19] "tempo"                        "track_id"                    
## [21] "analysis_url"                 "time_signature"              
## [23] "artists"                      "available_markets"           
## [25] "disc_number"                  "duration_ms"                 
## [27] "explicit"                     "track_href"                  
## [29] "is_local"                     "track_name"                  
## [31] "track_preview_url"            "track_number"                
## [33] "type"                         "track_uri"                   
## [35] "external_urls.spotify"        "album_name"                  
## [37] "key_name"                     "mode_name"                   
## [39] "key_mode"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">unique</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "Faces"                                              
##  [2] "Circles (Deluxe)"                                   
##  [3] "Circles"                                            
##  [4] "Swimming"                                           
##  [5] "The Divine Feminine"                                
##  [6] "Best Day Ever (5th Anniversary Remastered Edition)" 
##  [7] "GO:OD AM"                                           
##  [8] "Live From Space"                                    
##  [9] "Watching Movies with the Sound Off (Deluxe Edition)"
## [10] "Watching Movies with the Sound Off"                 
## [11] "Mac Miller : Live From London (With The Internet)"  
## [12] "Macadelic (Remastered Edition)"                     
## [13] "Blue Slide Park (Commentary Version)"               
## [14] "Blue Slide Park (Edited Version)"                   
## [15] "Blue Slide Park"                                    
## [16] "K.I.D.S. (Deluxe)"                                  
## [17] "K.I.D.S."
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">track_name</span><span class="p">,</span><span class="w"> </span><span class="m">15</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "Inside Outside"                          
##  [2] "Here We Go"                              
##  [3] "Friends (feat. ScHoolboy Q)"             
##  [4] "Angel Dust"                              
##  [5] "Malibu"                                  
##  [6] "What Do You Do (feat. Sir Michael Rocks)"
##  [7] "It Just Doesn‚Äôt Matter"                  
##  [8] "Therapy"                                 
##  [9] "Polo Jeans (feat. Earl Sweatshirt)"      
## [10] "Happy Birthday"                          
## [11] "Wedding"                                 
## [12] "Funeral"                                 
## [13] "Diablo"                                  
## [14] "Ave Maria"                               
## [15] "55"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">dim</span><span class="p">(</span><span class="n">mm_data</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 305  39
</code></pre></div></div>

<p>Excellent! The returned dataframe contains <code class="language-plaintext highlighter-rouge">305</code> observations,
or in this case songs, and each observation has <code class="language-plaintext highlighter-rouge">39</code> variables.</p>

<h1 id="checking-the-data">Checking the Data</h1>

<p>We can see from the <code class="language-plaintext highlighter-rouge">unique(mm_data$album_name)</code> function that the albums are
listed in order of upload date, with Faces being the most recent album added
to Mac‚Äôs Spotify page. While this may seem handy, it is important to note that
the order in which albums are uploaded to Spotify is not always the same order
that the albums were released. We can observe this by taking a look at the
<code class="language-plaintext highlighter-rouge">album_release_date</code> variable.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">plotly</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">select</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">distinct</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 17 x 2
##    album_name                                          album_release_date
##    &lt;chr&gt;                                               &lt;chr&gt;             
##  1 Faces                                               2021-10-15        
##  2 Circles (Deluxe)                                    2020-03-19        
##  3 Circles                                             2020-01-17        
##  4 Swimming                                            2018-08-03        
##  5 The Divine Feminine                                 2016-09-16        
##  6 Best Day Ever (5th Anniversary Remastered Edition)  2016-06-03        
##  7 GO:OD AM                                            2015-09-18        
##  8 Live From Space                                     2013-12-17        
##  9 Watching Movies with the Sound Off (Deluxe Edition) 2013-06-18        
## 10 Watching Movies with the Sound Off                  2013-06-18        
## 11 Mac Miller : Live From London (With The Internet)   2013-01-01        
## 12 Macadelic (Remastered Edition)                      2012-03-23        
## 13 Blue Slide Park (Commentary Version)                2011-11-15        
## 14 Blue Slide Park (Edited Version)                    2011-11-15        
## 15 Blue Slide Park                                     2011-11-08        
## 16 K.I.D.S. (Deluxe)                                   2010-08-13        
## 17 K.I.D.S.                                            2010-08-13
</code></pre></div></div>

<p>This readout implies that Faces is the most recent album to release. However,
by checking Mac‚Äôs 
<a href="https://en.wikipedia.org/wiki/Mac_Miller_discography">discography</a>, we can see
that Faces was actually released as a mixtape back in 2014, much earlier than
the variable from Spotify‚Äôs data would suggest. Since this project involves 
analyzing how Mac‚Äôs music changed throughout the duration of his career, it is
important to have accurate ordering of dates associated with the albums.</p>

<h2 id="webscraping">Webscraping</h2>

<p>To remedy this, we can use some quick web scraping to pull the release dates 
from the wiki page and amend the data.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># run install.packages('rvest') if you don't have this package already</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">
</span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"https://en.wikipedia.org/wiki/Mac_Miller_discography"</span><span class="w">
</span><span class="n">wp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">
</span><span class="n">rel_dates</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_nodes</span><span class="p">(</span><span class="w">
  </span><span class="n">wp</span><span class="p">,</span><span class="w"> </span><span class="s2">"th i , .plainrowheaders th+ td li:nth-child(1) , th i a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">html_text</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>Now, the above code may look a little intimidating if you are new to
webscraping. That‚Äôs okay, it looks much scarier than it really is. The
<code class="language-plaintext highlighter-rouge">read_html()</code> function simply reads the page‚Äôs html code and stores it as a 
list in your R environment. Then, we need to tell R what parts of the webpage
we want extracted. To do this, I used the 
<a href="https://chrome.google.com/webstore/detail/selectorgadget/mhjhnkcfbdhnjickkkdbjoemdmbfginb?hl=en">SelectorGadget</a> extension for Chrome. Using the tool makes webscraping
very simple, you just highlight the elements you wish to capture and the tool
will give you the CSS selector for it. That is how the arguments you see in the
<code class="language-plaintext highlighter-rouge">html_nodes()</code> function were found. Once you‚Äôve identified the nodes, pass the
results to the <code class="language-plaintext highlighter-rouge">html_text()</code> function and voila! You know have text from a
website stored right in your R environment.</p>

<p>Let‚Äôs check out what our scraping resulted in:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">rel_dates</span><span class="p">,</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "Blue Slide Park"                    "Blue Slide Park"                   
##  [3] "Released: November 8, 2011[16]"     "Watching Movies with the Sound Off"
##  [5] "Watching Movies with the Sound Off" "Released: June 18, 2013[20]"       
##  [7] "GO:OD AM"                           "GO:OD AM"                          
##  [9] "Released: September 18, 2015[22]"   "The Divine Feminine"               
## [11] "The Divine Feminine"                "Released: September 16, 2016[24]"  
## [13] "Swimming"                           "Swimming"                          
## [15] "Released: August 3, 2018[26]"       "Circles"                           
## [17] "Circles"                            "Released: January 17, 2020[31]"    
## [19] "Live from Space"                    "Live from Space"
</code></pre></div></div>

<h3 id="cleaning-the-scraped-data">Cleaning the scraped data</h3>

<p>While that looks pretty good, you can see that the album titles are listed
twice, and the release dates could be formatted a little nicer. Let‚Äôs fix that
up to a nicer format.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Remove duplicates and format into dataframe for manipulation</span><span class="w">
</span><span class="n">rel_dates</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="w">
  </span><span class="n">unique</span><span class="p">(</span><span class="n">rel_dates</span><span class="p">),</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">byrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w">

</span><span class="c1"># Filter out any works that aren't hosted on Spotify</span><span class="w">
</span><span class="n">rel_dates</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rel_dates</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="w">
  </span><span class="n">V1</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">tolower</span><span class="p">()</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
                    </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"( \\().*"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
                    </span><span class="n">tolower</span><span class="p">()))</span><span class="w">

</span><span class="c1"># Cleaning date text</span><span class="w">
</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"(?:Released: )"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="p">)</span><span class="w">
</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">".{4}$"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="p">)</span><span class="w">

</span><span class="c1"># Converts textual dates to date type object</span><span class="w">
</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lubridate</span><span class="o">::</span><span class="n">parse_date_time</span><span class="p">(</span><span class="w">
  </span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V2</span><span class="p">,</span><span class="w"> </span><span class="n">orders</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"mdy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">lubridate</span><span class="o">::</span><span class="n">as_date</span><span class="p">()</span><span class="w">

</span><span class="c1"># Check results to ensure they look as expected</span><span class="w">
</span><span class="n">rel_dates</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 11 x 2
##    V1                                 V2        
##    &lt;chr&gt;                              &lt;date&gt;    
##  1 Blue Slide Park                    2011-11-08
##  2 Watching Movies with the Sound Off 2013-06-18
##  3 GO:OD AM                           2015-09-18
##  4 The Divine Feminine                2016-09-16
##  5 Swimming                           2018-08-03
##  6 Circles                            2020-01-17
##  7 Live from Space                    2013-12-17
##  8 K.I.D.S.                           2010-08-13
##  9 Best Day Ever                      2011-03-11
## 10 Macadelic                          2012-03-23
## 11 Faces                              2014-05-11
</code></pre></div></div>

<h2 id="prepping-for-merge">Prepping for Merge</h2>

<p>Now our release dates are in a more workable format. However, before we merge
the two datasets, let‚Äôs first take one more look at the album names in our 
main dataframe, <code class="language-plaintext highlighter-rouge">mm_data</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">unique</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "Faces"                                              
##  [2] "Circles (Deluxe)"                                   
##  [3] "Circles"                                            
##  [4] "Swimming"                                           
##  [5] "The Divine Feminine"                                
##  [6] "Best Day Ever (5th Anniversary Remastered Edition)" 
##  [7] "GO:OD AM"                                           
##  [8] "Live From Space"                                    
##  [9] "Watching Movies with the Sound Off (Deluxe Edition)"
## [10] "Watching Movies with the Sound Off"                 
## [11] "Mac Miller : Live From London (With The Internet)"  
## [12] "Macadelic (Remastered Edition)"                     
## [13] "Blue Slide Park (Commentary Version)"               
## [14] "Blue Slide Park (Edited Version)"                   
## [15] "Blue Slide Park"                                    
## [16] "K.I.D.S. (Deluxe)"                                  
## [17] "K.I.D.S."
</code></pre></div></div>

<p>We see from this readout that many albums contain multiple editions, such as
deluxe releases, remasters, or commentary bonuses. To prevent our analysis from
being biased towards those repeated works, we should selectively filter out 
albums that are listed multiple times. Firstly, the commentary version of
Blue Slide Park will be omitted. Next, for any album that has a deluxe release,
we will keep only the deluxe release, dropping the original album from the
dataset. Lastly, we will rename 
<em>Best Day Ever (5th Anniversary Remastered Edition)</em> and
<em>Macadelic (Remastered Edition)</em>. 
This will help us when merging the datasets.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Shortening 'Best Day Ever' album name for merging</span><span class="w">
</span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="p">[</span><span class="w">
  </span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="w"> </span><span class="o">==</span><span class="w"> 
  </span><span class="s2">"Best Day Ever (5th Anniversary Remastered Edition)"</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Best Day Ever"</span><span class="w">

</span><span class="c1"># Dropping '(Remastered Edition)' from Macadelic</span><span class="w">
</span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="p">[</span><span class="w">
  </span><span class="n">mm_data</span><span class="o">$</span><span class="n">album_name</span><span class="w"> </span><span class="o">==</span><span class="w"> 
  </span><span class="s2">"Macadelic (Remastered Edition)"</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Macadelic"</span><span class="w">

</span><span class="c1"># Drop any non-deluxe editions of albums that have deluxe editions</span><span class="w">
</span><span class="c1"># Note that Blue Slide Park's additional versions were also dropped</span><span class="w">
</span><span class="c1"># Live From London was dropped as it only included already present songs</span><span class="w">
</span><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">mm_data</span><span class="p">,</span><span class="w"> </span><span class="o">!</span><span class="p">(</span><span class="n">album_name</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="w">
  </span><span class="s2">"Circles"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"Watching Movies with the Sound Off"</span><span class="p">,</span><span class="w"> 
  </span><span class="s2">"K.I.D.S."</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Mac Miller : Live From London (With The Internet)"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Blue Slide Park (Commentary Version)"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Blue Slide Park (Edited Version)"</span><span class="p">)))</span><span class="w">

</span><span class="c1"># Adding " (Deluxe)" onto album names in true release date set for merging</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="m">8</span><span class="p">)){</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">2</span><span class="p">){</span><span class="w">
    </span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="s2">" (Deluxe Edition)"</span><span class="p">)}</span><span class="w">
  </span><span class="k">else</span><span class="w">
    </span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_c</span><span class="p">(</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="s2">" (Deluxe)"</span><span class="p">)}</span><span class="w">

</span><span class="c1"># Adjusting Capitalization of "Live from Space" to match mm_data$album_name</span><span class="w">
</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="p">[</span><span class="n">rel_dates</span><span class="o">$</span><span class="n">V1</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Live from Space"</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Live From Space"</span><span class="w">
</span></code></pre></div></div>

<h2 id="merging-the-data">Merging the Data</h2>

<p>Now that our extra versions have been dropped from the data, we can finally
merge our two datasets to attach the accurate release dates.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Performing the merge of the two datasets</span><span class="w">
</span><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">mm_data</span><span class="p">,</span><span class="w"> </span><span class="n">rel_dates</span><span class="p">,</span><span class="w">
                     </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"album_name"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"V1"</span><span class="p">))</span><span class="w">
</span><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">rename</span><span class="p">(</span><span class="s2">"true_rel_date"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"V2"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>With the merge complete, let‚Äôs take a look at the differences between the
original <code class="language-plaintext highlighter-rouge">album_release_date</code> column and our new <code class="language-plaintext highlighter-rouge">true_rel_date</code> column.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">select</span><span class="p">(</span><span class="n">mm_data</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">,</span><span class="w"> </span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">true_rel_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unique</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 11 x 3
##    album_release_date album_name                                   true_rel_date
##    &lt;chr&gt;              &lt;chr&gt;                                        &lt;date&gt;       
##  1 2021-10-15         Faces                                        2014-05-11   
##  2 2020-03-19         Circles (Deluxe)                             2020-01-17   
##  3 2018-08-03         Swimming                                     2018-08-03   
##  4 2016-09-16         The Divine Feminine                          2016-09-16   
##  5 2016-06-03         Best Day Ever                                2011-03-11   
##  6 2015-09-18         GO:OD AM                                     2015-09-18   
##  7 2013-12-17         Live From Space                              2013-12-17   
##  8 2013-06-18         Watching Movies with the Sound Off (Deluxe ~ 2013-06-18   
##  9 2012-03-23         Macadelic                                    2012-03-23   
## 10 2011-11-08         Blue Slide Park                              2011-11-08   
## 11 2010-08-13         K.I.D.S. (Deluxe)                            2010-08-13
</code></pre></div></div>

<p>Excellent! Now that we have each album‚Äôs true release date, we can go ahead and
drop the old variable <code class="language-plaintext highlighter-rouge">album_release_date</code> and rename our new variable to take
its place.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">select</span><span class="p">(</span><span class="n">mm_data</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">rename</span><span class="p">(</span><span class="n">album_release_date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">true_rel_date</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="filtering-the-data">Filtering the Data</h2>

<h3 id="handling-duplicates">Handling Duplicates</h3>

<p>Before we head into the next step in our analysis, let‚Äôs first make sure that we
don‚Äôt have multiple entries of any tracks.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mm_data</span><span class="o">$</span><span class="n">track_name</span><span class="p">[</span><span class="n">duplicated</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">track_name</span><span class="p">)]</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "Congratulations (feat. Bilal)"                 
##  [2] "Dang! (feat. Anderson .Paak)"                  
##  [3] "Stay"                                          
##  [4] "Skin"                                          
##  [5] "Cinderella (feat. Ty Dolla $ign)"              
##  [6] "Planet God Damn (feat. Njomza)"                
##  [7] "Soulmate"                                      
##  [8] "We (feat. CeeLo Green)"                        
##  [9] "My Favorite Part"                              
## [10] "God Is Fair, Sexy Nasty (feat. Kendrick Lamar)"
## [11] "Doors"                                         
## [12] "Brand Name"                                    
## [13] "Rush Hour"                                     
## [14] "Two Matches (feat. Ab-Soul)"                   
## [15] "100 Grandkids"                                 
## [16] "Time Flies (feat. Lil B)"                      
## [17] "Weekend (feat. Miguel)"                        
## [18] "Clubhouse"                                     
## [19] "In the Bag"                                    
## [20] "Break the Law"                                 
## [21] "Perfect Circle / God Speed"                    
## [22] "When in Rome"                                  
## [23] "ROS"                                           
## [24] "Cut the Check (feat. Chief Keef)"              
## [25] "Ascension"                                     
## [26] "Jump"                                          
## [27] "The Festival (feat. Little Dragon)"
</code></pre></div></div>

<p>Good thing we checked! 27 duplicate entries is no joke, so let‚Äôs figure out how
this happened. Familiarity with Spotify and Mac‚Äôs library leads me to initially
suspect that these tracks appear on both an explicit and clean versions of
their respective albums. We can check this assumption rather quickly, so let‚Äôs 
do so.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">filter</span><span class="p">(</span><span class="w">
    </span><span class="n">track_name</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">track_name</span><span class="p">[</span><span class="n">duplicated</span><span class="p">(</span><span class="n">mm_data</span><span class="o">$</span><span class="n">track_name</span><span class="p">)]))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">track_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">explicit</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 54 x 3
##    track_name                  album_name explicit
##    &lt;chr&gt;                       &lt;chr&gt;      &lt;lgl&gt;   
##  1 Doors                       GO:OD AM   TRUE    
##  2 Brand Name                  GO:OD AM   TRUE    
##  3 Rush Hour                   GO:OD AM   TRUE    
##  4 Two Matches (feat. Ab-Soul) GO:OD AM   TRUE    
##  5 100 Grandkids               GO:OD AM   TRUE    
##  6 Time Flies (feat. Lil B)    GO:OD AM   TRUE    
##  7 Weekend (feat. Miguel)      GO:OD AM   TRUE    
##  8 Clubhouse                   GO:OD AM   TRUE    
##  9 In the Bag                  GO:OD AM   TRUE    
## 10 Break the Law               GO:OD AM   TRUE    
## # ... with 44 more rows
</code></pre></div></div>

<p>As expected, it looks like the duplicate entries stem from clean editions of
albums. To handle this, we can first double-check that aside from the clean
albums, every album in the dataset contains at least one explicit song. If so,
then we can group the observations by album and simply drop any album that
contains no explicit tracks.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># note we use album_id here because it is unique for explicit and clean versions</span><span class="w">
</span><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_id</span><span class="p">,</span><span class="w"> </span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">explicit</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 19 x 4
##    album_id               album_name                      `explicit == T~`     n
##    &lt;chr&gt;                  &lt;chr&gt;                           &lt;lgl&gt;            &lt;int&gt;
##  1 13fsGE9UN5VaAkETSs94un Best Day Ever                   TRUE                16
##  2 6VhDYmsjHqRxKXd0z7hmXI Blue Slide Park                 TRUE                16
##  3 1YZ3k65Mqw3G8FzYlW1mmp Circles (Deluxe)                FALSE               12
##  4 1YZ3k65Mqw3G8FzYlW1mmp Circles (Deluxe)                TRUE                 2
##  5 5SKnXCvB4fcGSZu32o3LRY Faces                           FALSE                1
##  6 5SKnXCvB4fcGSZu32o3LRY Faces                           TRUE                24
##  7 2Tyx5dLhHYkx6zeAdVaTzN GO:OD AM                        TRUE                17
##  8 6lEUoXk2C9IpUWPd4caiNE GO:OD AM                        FALSE               17
##  9 5pL6fzBD4sLs9hyau2CeUi K.I.D.S. (Deluxe)               FALSE                2
## 10 5pL6fzBD4sLs9hyau2CeUi K.I.D.S. (Deluxe)               TRUE                16
## 11 0oPKygNJATeXkPWre0R0Nr Live From Space                 TRUE                14
## 12 7nVdkG4gZZxB1I1RLN27fJ Macadelic                       FALSE                2
## 13 7nVdkG4gZZxB1I1RLN27fJ Macadelic                       TRUE                15
## 14 5wtE5aLX5r7jOosmPhJhhk Swimming                        FALSE                1
## 15 5wtE5aLX5r7jOosmPhJhhk Swimming                        TRUE                12
## 16 4gtXD5SL0yysd1eRIrDpnZ The Divine Feminine             FALSE               10
## 17 6f6tko6NWoH00cyFOl4VYQ The Divine Feminine             FALSE                2
## 18 6f6tko6NWoH00cyFOl4VYQ The Divine Feminine             TRUE                 8
## 19 3T02fCxAjApu18taJLLbyN Watching Movies with the Sound~ TRUE                19
</code></pre></div></div>

<p>We can see here that the only albums with two different entries for <strong>album_id</strong>
are <em>GO:OD AM</em> and <em>The Divine Feminine</em>. These entries represent the explicit
and clean editions of the albums. To handle this, we can simply filter out
any entry that matches the <strong>album_id</strong> value of the clean editions of these
albums.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mm_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">album_id</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"6lEUoXk2C9IpUWPd4caiNE"</span><span class="p">,</span><span class="w"> </span><span class="s2">"4gtXD5SL0yysd1eRIrDpnZ"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h2 id="variable-selection">Variable Selection</h2>

<p>Now that our release date and duplicate entry issues have been solved, let‚Äôs 
take a look at which variables we‚Äôd like to keep, and which ones we can exclude 
moving forward.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">mm_data</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] "artist_name"                  "artist_id"                   
##  [3] "album_id"                     "album_type"                  
##  [5] "album_images"                 "album_release_year"          
##  [7] "album_release_date_precision" "danceability"                
##  [9] "energy"                       "key"                         
## [11] "loudness"                     "mode"                        
## [13] "speechiness"                  "acousticness"                
## [15] "instrumentalness"             "liveness"                    
## [17] "valence"                      "tempo"                       
## [19] "track_id"                     "analysis_url"                
## [21] "time_signature"               "artists"                     
## [23] "available_markets"            "disc_number"                 
## [25] "duration_ms"                  "explicit"                    
## [27] "track_href"                   "is_local"                    
## [29] "track_name"                   "track_preview_url"           
## [31] "track_number"                 "type"                        
## [33] "track_uri"                    "external_urls.spotify"       
## [35] "album_name"                   "key_name"                    
## [37] "mode_name"                    "key_mode"                    
## [39] "album_release_date"
</code></pre></div></div>

<p>As we can see, there are quite a few variables in the set. To get an idea of
what each variable holds, we can use <em>tidyverse</em>‚Äôs <code class="language-plaintext highlighter-rouge">glimpse()</code> function.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">glimpse</span><span class="p">(</span><span class="n">mm_data</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Rows: 179
## Columns: 39
## $ artist_name                  &lt;chr&gt; "Mac Miller", "Mac Miller", "Mac Miller",~
## $ artist_id                    &lt;chr&gt; "4LLpKhyESsyAXpc4laK94U", "4LLpKhyESsyAXp~
## $ album_id                     &lt;chr&gt; "5SKnXCvB4fcGSZu32o3LRY", "5SKnXCvB4fcGSZ~
## $ album_type                   &lt;chr&gt; "album", "album", "album", "album", "albu~
## $ album_images                 &lt;list&gt; [&lt;data.frame[3 x 3]&gt;], [&lt;data.frame[3 x ~
## $ album_release_year           &lt;dbl&gt; 2021, 2021, 2021, 2021, 2021, 2021, 2021,~
## $ album_release_date_precision &lt;chr&gt; "day", "day", "day", "day", "day", "day",~
## $ danceability                 &lt;dbl&gt; 0.689, 0.489, 0.557, 0.628, 0.591, 0.665,~
## $ energy                       &lt;dbl&gt; 0.7460, 0.8670, 0.6780, 0.8220, 0.5810, 0~
## $ key                          &lt;int&gt; 0, 6, 1, 5, 6, 10, 8, 1, 1, 11, 1, 0, 1, ~
## $ loudness                     &lt;dbl&gt; -5.971, -4.668, -5.772, -5.439, -5.760, -~
## $ mode                         &lt;int&gt; 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,~
## $ speechiness                  &lt;dbl&gt; 0.0549, 0.4660, 0.2790, 0.2340, 0.1650, 0~
## $ acousticness                 &lt;dbl&gt; 0.07710, 0.02050, 0.14900, 0.46700, 0.145~
## $ instrumentalness             &lt;dbl&gt; 0.00e+00, 0.00e+00, 0.00e+00, 0.00e+00, 4~
## $ liveness                     &lt;dbl&gt; 0.2910, 0.3530, 0.6110, 0.4860, 0.1120, 0~
## $ valence                      &lt;dbl&gt; 0.376, 0.550, 0.366, 0.410, 0.226, 0.444,~
## $ tempo                        &lt;dbl&gt; 113.569, 75.100, 148.103, 78.029, 78.104,~
## $ track_id                     &lt;chr&gt; "2EFqMCOdTTkcFYHoJH21Jr", "40dlJFdqfm8Cay~
## $ analysis_url                 &lt;chr&gt; "https://api.spotify.com/v1/audio-analysi~
## $ time_signature               &lt;int&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 4, 4, 4,~
## $ artists                      &lt;list&gt; [&lt;data.frame[1 x 6]&gt;], [&lt;data.frame[1 x ~
## $ available_markets            &lt;list&gt; &lt;"AD", "AE", "AG", "AL", "AM", "AO", "AR~
## $ disc_number                  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,~
## $ duration_ms                  &lt;int&gt; 113217, 167759, 398454, 222670, 211680, 2~
## $ explicit                     &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,~
## $ track_href                   &lt;chr&gt; "https://api.spotify.com/v1/tracks/2EFqMC~
## $ is_local                     &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,~
## $ track_name                   &lt;chr&gt; "Inside Outside", "Here We Go", "Friends ~
## $ track_preview_url            &lt;chr&gt; "https://p.scdn.co/mp3-preview/64db1cbde4~
## $ track_number                 &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13~
## $ type                         &lt;chr&gt; "track", "track", "track", "track", "trac~
## $ track_uri                    &lt;chr&gt; "spotify:track:2EFqMCOdTTkcFYHoJH21Jr", "~
## $ external_urls.spotify        &lt;chr&gt; "https://open.spotify.com/track/2EFqMCOdT~
## $ album_name                   &lt;chr&gt; "Faces", "Faces", "Faces", "Faces", "Face~
## $ key_name                     &lt;chr&gt; "C", "F#", "C#", "F", "F#", "A#", "G#", "~
## $ mode_name                    &lt;chr&gt; "major", "minor", "major", "major", "mino~
## $ key_mode                     &lt;chr&gt; "C major", "F# minor", "C# major", "F maj~
## $ album_release_date           &lt;date&gt; 2014-05-11, 2014-05-11, 2014-05-11, 2014~
</code></pre></div></div>

<p>Wow! That‚Äôs a lot of info. To make things a little simpler, we can refer to
<a href="https://developer.spotify.com/documentation/web-api/reference/#/operations/get-several-audio-features">Spotify‚Äôs API documentation</a>
to get a better idea of what these variables represent. Some variables are 
rather self-explanatory, such as <code class="language-plaintext highlighter-rouge">artist_name</code>, <code class="language-plaintext highlighter-rouge">track_name</code>, <code class="language-plaintext highlighter-rouge">album_name</code>, and
<code class="language-plaintext highlighter-rouge">duration_ms</code>. For this analysis, we want to keep identifying information such
as a tracks name, the album it came from, and the release date. The other
variables we‚Äôll want to keep are measures about the songs sonic signature. These
measures include <code class="language-plaintext highlighter-rouge">danceability</code>, <code class="language-plaintext highlighter-rouge">energy</code>, <code class="language-plaintext highlighter-rouge">loudness</code>, <code class="language-plaintext highlighter-rouge">speechiness</code>,
<code class="language-plaintext highlighter-rouge">acousticness</code>, <code class="language-plaintext highlighter-rouge">instrumentalness</code>, <code class="language-plaintext highlighter-rouge">liveness</code>, and <code class="language-plaintext highlighter-rouge">valence</code>. These are metrics
provided by Spotify that give quantitative measures of a track‚Äôs audio
characteristics. More information on these metrics and how they are derived can
be found at <a href="https://developer.spotify.com/documentation/web-api/reference/#/operations/get-several-audio-features">Spotify‚Äôs API documentation</a>.
Other variables we‚Äôll want to keep are <code class="language-plaintext highlighter-rouge">key</code>, <code class="language-plaintext highlighter-rouge">mode</code>, <code class="language-plaintext highlighter-rouge">tempo</code>, <code class="language-plaintext highlighter-rouge">time_signature</code>,
<code class="language-plaintext highlighter-rouge">duration_ms</code>, and <code class="language-plaintext highlighter-rouge">explicit</code>. These variables provide more information about
the composition of the song.</p>

<p>Now that we‚Äôve identified the variables we want to keep in our working data, we
can go ahead and create a filtered version of the full data to move forward
with. We can also take this opportunity to reorder our variables into more 
organized groups.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mm_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">select</span><span class="p">(</span><span class="w">
  </span><span class="c1"># identifying information</span><span class="w">
  </span><span class="n">track_name</span><span class="p">,</span><span class="w">
  </span><span class="n">artist_name</span><span class="p">,</span><span class="w">
  </span><span class="n">album_name</span><span class="p">,</span><span class="w">
  </span><span class="n">album_release_date</span><span class="p">,</span><span class="w">
  </span><span class="c1"># spotify provided quantitative measures</span><span class="w">
  </span><span class="n">acousticness</span><span class="p">,</span><span class="w">
  </span><span class="n">danceability</span><span class="p">,</span><span class="w">
  </span><span class="n">energy</span><span class="p">,</span><span class="w">
  </span><span class="n">instrumentalness</span><span class="p">,</span><span class="w">
  </span><span class="n">liveness</span><span class="p">,</span><span class="w">
  </span><span class="n">loudness</span><span class="p">,</span><span class="w">
  </span><span class="n">speechiness</span><span class="p">,</span><span class="w">
  </span><span class="n">valence</span><span class="p">,</span><span class="w">
  </span><span class="c1"># composition information</span><span class="w">
  </span><span class="n">duration_ms</span><span class="p">,</span><span class="w">
  </span><span class="n">explicit</span><span class="p">,</span><span class="w">
  </span><span class="n">key</span><span class="p">,</span><span class="w">
  </span><span class="n">mode</span><span class="p">,</span><span class="w">
  </span><span class="n">tempo</span><span class="p">,</span><span class="w">
  </span><span class="n">time_signature</span><span class="w">
</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># quickly formatting key, mode, and time signature as factors</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="n">key</span><span class="p">,</span><span class="w"> </span><span class="n">mode</span><span class="p">,</span><span class="w"> </span><span class="n">time_signature</span><span class="p">),</span><span class="w"> </span><span class="n">as.factor</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h1 id="exploratory-data-analysis-eda">Exploratory Data Analysis (EDA)</h1>

<p>With the data sorted and filtered to only include relevant variables, we are
now ready to begin using statistical summaries and creating visualizations
to glean insights from. We will be exploring the data to discover patterns, 
identify anomalies (or outliers), and to make some informed observations that
will help us to better understand the dataset.</p>

<h2 id="statistical-summary">Statistical Summary</h2>

<p>We‚Äôll start our analysis by looking at a basic statistical summary of the
quantitative variables in our dataset. We can easily find what variables to 
include by using a <code class="language-plaintext highlighter-rouge">select()</code> statement.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">select</span><span class="p">(</span><span class="n">where</span><span class="p">(</span><span class="n">is.numeric</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summary</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   acousticness       danceability        energy       instrumentalness  
##  Min.   :0.000283   Min.   :0.1410   Min.   :0.0316   Min.   :0.000000  
##  1st Qu.:0.062250   1st Qu.:0.5070   1st Qu.:0.5355   1st Qu.:0.000000  
##  Median :0.200000   Median :0.6130   Median :0.6700   Median :0.000000  
##  Mean   :0.316191   Mean   :0.6031   Mean   :0.6441   Mean   :0.013541  
##  3rd Qu.:0.539500   3rd Qu.:0.7075   3rd Qu.:0.7845   3rd Qu.:0.000269  
##  Max.   :0.981000   Max.   :0.8750   Max.   :0.9640   Max.   :0.486000  
##     liveness         loudness        speechiness        valence      
##  Min.   :0.0593   Min.   :-25.426   Min.   :0.0261   Min.   :0.0546  
##  1st Qu.:0.1110   1st Qu.: -8.411   1st Qu.:0.0946   1st Qu.:0.2520  
##  Median :0.1840   Median : -6.687   Median :0.1730   Median :0.3860  
##  Mean   :0.2645   Mean   : -7.278   Mean   :0.2053   Mean   :0.4124  
##  3rd Qu.:0.3490   3rd Qu.: -5.392   3rd Qu.:0.2980   3rd Qu.:0.5550  
##  Max.   :0.9760   Max.   : -2.527   Max.   :0.6410   Max.   :0.9430  
##   duration_ms         tempo       
##  Min.   : 26882   Min.   : 57.75  
##  1st Qu.:177096   1st Qu.: 89.50  
##  Median :213772   Median :119.97  
##  Mean   :228138   Mean   :119.52  
##  3rd Qu.:271508   3rd Qu.:146.50  
##  Max.   :500960   Max.   :191.92
</code></pre></div></div>

<p>These values tell us some great cursory information about the data.</p>

<h3 id="some-observations">Some observations:</h3>

<ul>
  <li><strong>acousticness</strong> has the widest range of all Spotify‚Äôs metrics, but the mean
and 3rd quartile suggest the max may be an anomaly</li>
  <li><strong>danceability</strong> and <strong>energy</strong> have relatively similar summaries, suggesting
possible correlation between the two. Values tend to trend upwards, indicating
the minimum value in both of these variables may be outliers (potentially even
the same track? worth investigating)</li>
  <li><strong>instrumentalness</strong> doesn‚Äôt contain any values &gt; 0.5, Spotify‚Äôs threshold 
intended to represent instrumental tracks, as per their documentation linked
above. This suggests the discography does not contain any purely instrumental
tracks</li>
  <li><strong>liveness</strong> having a max of <code class="language-plaintext highlighter-rouge">0.976</code> suggests Spotify is 
confident that at least one track was performed live (documentation lists 0.8
as the likelihood threshold). This max is very far from the rest of the measures
for <strong>liveness</strong>, indicating a likely outlier</li>
  <li><strong>loudness</strong>, measured in decibels (dB) also has a relatively wide range, 
with all values &lt; 0. Spotify lists typical range as falling between -60 and 0, 
suggesting Mac‚Äôs music trends towards the upper side of this traditional range</li>
  <li><strong>speechiness</strong> tends to be lower than Spotify‚Äôs typical value range for rap
music (0.33 - 0.66 as per documentation). This suggests Mac‚Äôs tracks have more
sections that do not contain vocals in them. Investigating this on a per-album
basis could yield interesting findings</li>
  <li><strong>valence</strong> sees a wide range of values, with the mean and median falling just
under the halfway point between the min and max. However, the 3rd quartile value
tells us that the max value is likely an anomaly</li>
  <li><strong>duration_ms</strong> seems to hold a rather tight distribution for the most part, 
with both the min and the max values seemingly pretty distant from the typical
values in the variable</li>
  <li><strong>tempo</strong> holds some surprising values. The mean and median suggest that ~120
is Mac‚Äôs typical tempo, which is higher than the 
<a href="https://www.izotope.com/en/learn/using-different-tempos-to-make-beats-for-different-genres.html">average hip-hop tempo range</a>.
The linked source offers that typically, the higher the beats per minute (BPM),
or tempo, the more energy and uplifting a track is. Knowing this, it would be 
interesting to investigate the relationship between <strong>tempo</strong>, <strong>energy</strong>,
<strong>valence</strong>, and <strong>danceability</strong>. I‚Äôd expect, at the very least, a weak 
positive correlation between all those variables</li>
</ul>

<h2 id="visualizations">Visualizations</h2>

<h3 id="per-album-plots">Per Album Plots</h3>

<p>This section will focus on some simple but important plots, mostly involving 
counts and frequencies of measures. This will give a good overview of our data 
at a high level before we delve into specifics and multivariate interactions.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">album_palette</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="w">
  </span><span class="s2">"K.I.D.S. (Deluxe)"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#387228"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Best Day Ever"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#C315AA"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Blue Slide Park"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#3540F2"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Macadelic"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#767092"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Watching Movies with the Sound Off (Deluxe Edition)"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#DA252A"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Live From Space"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#FE675C"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Faces"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#FDBB1E"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"GO:OD AM"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#A2A2A2"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"The Divine Feminine"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#DDC1BE"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Swimming"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#668099"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"Circles (Deluxe)"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"#464646"</span><span class="w">
  </span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">group_by</span><span class="p">(</span><span class="w">
    </span><span class="n">album_name</span><span class="p">,</span><span class="w">
    </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">tally</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="w">
      </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w"> 
      </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w">
      </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="w">
    </span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_text</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">),</span><span class="w"> 
    </span><span class="n">vjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">-0.2</span><span class="p">,</span><span class="w"> 
    </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3.5</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="w">
    </span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">26</span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="w">
    </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> 
    </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Tracks Per Mac Miller Album"</span><span class="p">,</span><span class="w">
    </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Ordered by Release Date"</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="w">
    </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="w">
    </span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="w">
  </span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/album-track-counts-1.png" style="display: block; margin: auto;" /></p>

<p>From this plot we can see that Mac‚Äôs earlier albums tended to have a couple
more songs than his later releases, with <em>Faces</em> being the outlier of the
discography as a whole. This could partly be due to <em>Faces</em> originally being
released as a mixtape rather than a formal album, so perhaps it did not go
through the same revision processes that an album might see before release.</p>

<h4 id="duration-tabset-tabset-fade">Duration {.tabset .tabset-fade}</h4>

<p>Let‚Äôs also take a look at track duration trends for each album, as well as each
album‚Äôs total runtime.</p>

<h5 id="overview">Overview</h5>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="w">
    </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
    </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">duration_ms</span><span class="p">,</span><span class="w">
    </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.4</span><span class="p">,</span><span class="w"> </span><span class="n">shape</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"diamond"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Track Duration (ms)"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Track Duration by Album"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/track-duration-by-album-1.png" style="display: block; margin: auto;" /></p>

<p>This plot tells us that even though they typically had fewer tracks on them, 
Mac‚Äôs later albums contained tracks that, on average, were longer than tracks on
earlier albums. This can almost be thought of as a focus on ‚Äúquality over
quantity‚Äù when it comes to the later albums. Furthermore, the plot shows that
earlier albums had less variation in track duration, while later albums saw
more variety. It is interesting to see how <em>The Divine Feminine</em>, the album
with the fewest tracks, not only contains the longest track in the dataset, but
also two tracks that are significantly longer than the rest of the album. This
could very well be an example of careful song selection to help each album
maintain a relatively similar total runtime. We‚Äôll examine that below.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> 
            </span><span class="n">runtime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">duration_ms</span><span class="p">),</span><span class="w"> 
            </span><span class="n">album_release_date</span><span class="p">,</span><span class="w">
            </span><span class="n">.groups</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"keep"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="w">
    </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
    </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">runtime</span><span class="p">,</span><span class="w">
    </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Runtime (ms)"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Total Album Runtimes"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/album-runtimes-1.png" style="display: block; margin: auto;" /></p>

<p>By comparing this plot with the information about each album‚Äôs number of tracks,
we can see that there is a very clear correlation between number of tracks and
album runtime. For example, even though <em>K.I.D.S.</em> has a lower average track
duration than <em>Swimming</em>, the total runtime is still longer for <em>K.I.D.S.</em>, due
to the difference in track count. Generally, longer albums are subject to a bit
more criticism, as too long of a runtime can start to make the listener become
disinterested if the music doesn‚Äôt provide enough variation. Knowing this, it
again makes sense that <em>Faces</em> has such a higher runtime than any other work, as
it‚Äôs original release as a mixtape meant that it didn‚Äôt go through the same
revisions and polishing processes that formal albums do. This runtime plot also
confirms our previous theory of Mac‚Äôs later albums revolving more around the
substance of each individual track rather than making a longer, less focused 
album. We can also see from the plot that the concept of keeping longer songs
on <em>The Divine Feminine</em> does not really appear to have had a substantial 
impact on the album‚Äôs total runtime, as it is still significantly shorter than
all other works.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">album_trends</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="w">
    </span><span class="n">album_name</span><span class="p">,</span><span class="w">
    </span><span class="n">album_release_date</span><span class="p">,</span><span class="w">
    </span><span class="n">average_track_length</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">duration_ms</span><span class="p">),</span><span class="w">
    </span><span class="n">track_count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">(),</span><span class="w">
    </span><span class="n">.groups</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"keep"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="w">
      </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
    </span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w">

</span><span class="n">avg_track_len_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">album_trends</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_track_length</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_track_length</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_smooth</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">average_track_length</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> 
    </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lm"</span><span class="p">,</span><span class="w">
    </span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w">
    </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">,</span><span class="w">
    </span><span class="n">lty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"dotted"</span><span class="p">,</span><span class="w">
    </span><span class="n">se</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Average Duration (ms)"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Average Track Duration Trend"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="w">
    </span><span class="n">breaks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">2e+05</span><span class="p">,</span><span class="w"> </span><span class="m">2.4e+05</span><span class="p">,</span><span class="w"> </span><span class="m">2.8e+05</span><span class="p">,</span><span class="w"> </span><span class="m">3.2e+05</span><span class="p">),</span><span class="w">
    </span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"200K"</span><span class="p">,</span><span class="w"> </span><span class="s2">"240K"</span><span class="p">,</span><span class="w"> </span><span class="s2">"280K"</span><span class="p">,</span><span class="w"> </span><span class="s2">"320K"</span><span class="p">))</span><span class="w">

</span><span class="n">total_tracks_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">album_trends</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">track_count</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">track_count</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_smooth</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">track_count</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> 
    </span><span class="n">method</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lm"</span><span class="p">,</span><span class="w">
    </span><span class="n">formula</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w">
    </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">,</span><span class="w">
    </span><span class="n">lty</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"dotted"</span><span class="p">,</span><span class="w">
    </span><span class="n">se</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Tracks Per Album"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Tracks per Album Trend"</span><span class="p">)</span><span class="w">

</span><span class="n">avg_track_len_plot</span><span class="w">
</span><span class="n">total_tracks_plot</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/album-trends-1.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/album-trends-2.png" style="display: block; margin: auto;" /></p>

<p>While not too severe, these plots reveal that over the course of his career,
Mac‚Äôs albums tended to contain less songs, but those songs were of longer
duration.</p>

<h5 id="album-specific">Album-Specific</h5>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">album_names</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">arrange</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">.</span><span class="o">$</span><span class="n">album_name</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">unique</span><span class="p">()</span><span class="w">

</span><span class="n">figures</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">

</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">album_names</span><span class="p">){</span><span class="w">
  
  </span><span class="n">figures</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">filter</span><span class="p">(</span><span class="n">album_name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
      </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">fct_inorder</span><span class="p">(</span><span class="n">track_name</span><span class="p">),</span><span class="w"> </span><span class="n">desc</span><span class="p">(</span><span class="n">fct_inorder</span><span class="p">(</span><span class="n">track_name</span><span class="p">))),</span><span class="w"> 
          </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">duration_ms</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">geom_col</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
         </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Track Duration (ms)"</span><span class="p">,</span><span class="w">
         </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">limits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">5.5e+05</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="c1">#ggthemes::theme_clean() +</span><span class="w">
    </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">,</span><span class="w">
          </span><span class="n">plot.title.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"plot"</span><span class="p">)</span><span class="w">
  
</span><span class="p">}</span><span class="w">

</span><span class="n">aligned_figs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cowplot</span><span class="o">::</span><span class="n">align_plots</span><span class="p">(</span><span class="n">plotlist</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">figures</span><span class="p">,</span><span class="w"> </span><span class="n">align</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"v"</span><span class="p">)</span><span class="w">

</span><span class="n">lapply</span><span class="p">(</span><span class="n">aligned_figs</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="n">cowplot</span><span class="o">::</span><span class="n">ggdraw</span><span class="p">(</span><span class="n">x</span><span class="p">)})</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/track-durations-by-album-1.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-2.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-3.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-4.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-5.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-6.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-7.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-8.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-9.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-10.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/track-durations-by-album-11.png" style="display: block; margin: auto;" /></p>

<h4 id="explicitness">Explicitness</h4>

<p>Let‚Äôs take a quick look at the proportion of explicit and non-explicit (clean)
tracks on each album.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exp_plot</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">explicit</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="w">
      </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
      </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w">
      </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">explicit</span><span class="w">
    </span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> 
  </span><span class="n">geom_col</span><span class="p">(</span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"fill"</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.8</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.95</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Proportion of Explicit Tracks"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Per Album, ordered by Release Date"</span><span class="p">,</span><span class="w">
       </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Explicit"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">scales</span><span class="o">::</span><span class="n">percent</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="w">
    </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"FALSE"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lightgreen"</span><span class="p">,</span><span class="w"> </span><span class="s2">"TRUE"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"coral"</span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0.725</span><span class="p">,</span><span class="w"> </span><span class="m">1.1</span><span class="p">),</span><span class="w">
        </span><span class="n">legend.direction</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"horizontal"</span><span class="p">,</span><span class="w">
        </span><span class="n">legend.box.background</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_rect</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lightgrey"</span><span class="p">))</span><span class="w">

</span><span class="n">exp_table</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">n_tracks</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">(),</span><span class="w">
            </span><span class="n">n_explicit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">explicit</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w">
            </span><span class="n">prop_explicit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">n_explicit</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">n_tracks</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w">
            </span><span class="n">album_release_date</span><span class="p">,</span><span class="w">
            </span><span class="n">.groups</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"keep"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">distinct</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="s2">"Album Name"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="p">,</span><span class="w">
         </span><span class="s2">"Track Count"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n_tracks</span><span class="p">,</span><span class="w">
         </span><span class="s2">"Explicit Tracks"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n_explicit</span><span class="p">,</span><span class="w">
         </span><span class="s2">"Prop. Explicit"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">prop_explicit</span><span class="p">)</span><span class="w">

</span><span class="n">exp_plot</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/explicit-overview-plot-1.png" style="display: block; margin: auto;" /></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exp_table</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 11 x 4
##    `Album Name`                  `Track Count` `Explicit Trac~` `Prop. Explicit`
##    &lt;chr&gt;                                 &lt;int&gt;            &lt;int&gt;            &lt;dbl&gt;
##  1 K.I.D.S. (Deluxe)                        18               16             0.89
##  2 Best Day Ever                            16               16             1   
##  3 Blue Slide Park                          16               16             1   
##  4 Macadelic                                17               15             0.88
##  5 Watching Movies with the Sou~            19               19             1   
##  6 Live From Space                          14               14             1   
##  7 Faces                                    25               24             0.96
##  8 GO:OD AM                                 17               17             1   
##  9 The Divine Feminine                      10                8             0.8 
## 10 Swimming                                 13               12             0.92
## 11 Circles (Deluxe)                         14                2             0.14
</code></pre></div></div>

<p>Some observations from this plot and table:</p>

<ul>
  <li>All but one of the albums contained a proportion of explicit tracks &gt;= 0.8</li>
  <li><em>Circles</em>, Mac‚Äôs last album is the only work that contains more clean
tracks than explicit tracks</li>
</ul>

<h4 id="acousticness">Acousticness</h4>

<p>Per Spotify‚Äôs 
<a href="https://developer.spotify.com/documentation/web-api/reference/#/operations/get-several-audio-features">documentation</a>,
<strong>acousticness</strong> is ‚Äú*A confidence measure from 0.0 to 1.0 of whether or not 
the track is acoustic. 1.0 represents high confidence that the track is 
acoustic. According to 
<a href="https://en.wikipedia.org/wiki/Acoustic_music">Wikipedia</a>,
acoustic music is generally thought of as music that primary features
features that produce sound through physical properties, as opposed to electric
or digital amplification (think grand piano versus digital keyboard).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="w">
      </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
      </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">acousticness</span><span class="p">,</span><span class="w">
      </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="w">
    </span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Summary of Acousticness"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Per Album, ordered by Release Date"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="w">
    </span><span class="n">aes</span><span class="p">(</span><span class="w">
      </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stringr</span><span class="o">::</span><span class="n">str_wrap</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="m">28</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">album_release_date</span><span class="p">),</span><span class="w">
      </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">acousticness</span><span class="p">,</span><span class="w">
      </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="w">
    </span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggridges</span><span class="o">::</span><span class="n">geom_density_ridges2</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Density of Acousticness Measures"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Per Album"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_manual</span><span class="p">(</span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_palette</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Picking joint bandwidth of 0.12
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">album_name</span><span class="p">,</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="w">
    </span><span class="n">avg_acousticness</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">acousticness</span><span class="p">)</span><span class="w">
  </span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_release_date</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">avg_acousticness</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"lightblue"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1.5</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ggrepel</span><span class="o">::</span><span class="n">geom_text_repel</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">album_name</span><span class="p">),</span><span class="w"> </span><span class="n">force</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Acousticness"</span><span class="p">,</span><span class="w">
       </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Album Release Year"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Average Acousticness Per Album"</span><span class="p">,</span><span class="w">
       </span><span class="n">subtitle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Ordered by Release Date"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## `summarise()` has grouped output by 'album_name'. You can override using the
## `.groups` argument.
</code></pre></div></div>

<p><img src="main_proj_files/figure-html/acousticness-explore-1.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/acousticness-explore-2.png" style="display: block; margin: auto;" /><img src="main_proj_files/figure-html/acousticness-explore-3.png" style="display: block; margin: auto;" /></p>

<p>From these plots we can see a clear trend of increasing <strong>acousticness</strong> towards
the later works of Mac‚Äôs career. We can also see greater variation in the 
values of later albums, suggesting the possibility of more distinct sonic 
changes from album to album later in his career.</p>

<h3 id="measure-distributions">Measure Distributions</h3>

<p>This section will focus on displaying some simple yet informative information
regarding Spotify‚Äôs quantitative metrics:</p>

<ul>
  <li><strong>acousticness</strong></li>
  <li><strong>danceability</strong></li>
  <li><strong>energy</strong></li>
  <li><strong>instrumentalness</strong></li>
  <li><strong>liveness</strong></li>
  <li><strong>speechiness</strong></li>
  <li><strong>valence</strong></li>
</ul>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">measures</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="w">
  </span><span class="s2">"acousticness"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"danceability"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"energy"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"instrumentalness"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"liveness"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"speechiness"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"valence"</span><span class="w">
</span><span class="p">)</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">all_of</span><span class="p">(</span><span class="n">measures</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">gather</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">key</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">value</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">0.1</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">value</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">key</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_density</span><span class="p">(</span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1.25</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Value"</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Density"</span><span class="p">,</span><span class="w">
       </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Measure"</span><span class="p">,</span><span class="w">
       </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Spotify Measure Density Plot"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_color_brewer</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"qual"</span><span class="p">,</span><span class="w"> </span><span class="n">palette</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="main_proj_files/figure-html/spot-measure-density-1.png" style="display: block; margin: auto;" /></p>

<p>From this plot, we can see that <strong>danceability</strong> and <strong>energy</strong> seem to have
very similar density curves. It is definitely worth investigating if there is
any correlation between those two measures. Additionally, within the code to
construct the plot, you‚Äôll notice there is a <code class="language-plaintext highlighter-rouge">filter()</code> statement to set the
lower limit of the values to 0.1. This was done to exclude the enormous amount
of <strong>instrumentalness</strong> observations that lie between 0 and 0.1, which stretched
the y-axis by far too much for the rest of the density curves to be observed.</p>

<h3 id="multivariate-plots">Multivariate Plots</h3>

<p>Here we will be investigating some of the questions posed above by looking at
the interaction between specific variables.</p>

<p>####</p>
:ET